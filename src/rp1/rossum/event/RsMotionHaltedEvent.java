/*  -------------------------------------------------------------

    Rossum's Playhouse  --  a client/server based robot simulator
    Rossum's Playhouse is also known under the name "RP1".
    Copyright (C) 1999  G.W. Lucas

    This program is free software; you can redistribute it and/or modify
    it under the terms of the GNU Lesser General Public License as published by
    the Free Software Foundation; either version 2 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU Lesser General Public License for more details.

    You should have received a copy of the GNU Lesser General Public License
    along with this program; if not, write to the Free Software
    Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA

----------------------------------------------------------------- */


package rp1.rossum.event;

/*

   RsMotionHaltedEvent.java

   There are a few reasons a motion halted event can be issued.
   These are enumerated for the "causeOfHalt" element as follows:

      0: completed -- the original request for motion had finite duration and
                      was completed.

      1: requested -- the client-controller sent the robot a "halt request"

      2: collision -- the robot collides with a wall element of the floor plan

   Note that the fields x, y, and orientation indicate the position of the
   robot when the motion is completed.   These are "cheating" fields and are
   intended as a diagnostic tool.

   TO DO:  For diagnostic purposes, it may be helpful for this field
           to contain a full description of the request elements that
           started the motion.

*/




/**
 * An event generated by the simulator when a motion is terminated or completed.
 *
 */

public class RsMotionHaltedEvent extends RsEvent {

   /**
	 * 
	 */
	private static final long serialVersionUID = -4483640979360366149L;
public RsMotionHaltedEvent(
      double  simTime,
      int     causeOfHalt,
      double  x,
      double  y,
      double  orientation,
      double  duration){
         super(EVT_MOTION_HALTED, simTime);
         this.causeOfHalt = causeOfHalt;
         this.x           = x;
         this.y           = y;
         this.orientation = orientation;
         this.duration    = duration;
   }

   public String whyHalted(){
      if(causeOfHalt==HALTED_ON_COMPLETION)
         return "completion";
      else if(causeOfHalt==HALTED_ON_REQUEST)
         return "request";
      else if(causeOfHalt==HALTED_ON_COLLISION)
         return "collision";
      else
         return "internal error";   // we should NEVER get here
   }

   public final int    causeOfHalt;
   public final double x, y;
   public final double orientation;
   public final double duration;

   public static final int    HALTED_ON_COMPLETION=0;
   public static final int    HALTED_ON_REQUEST=1;
   public static final int    HALTED_ON_COLLISION=2;
}

